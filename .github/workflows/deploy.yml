name: CI/CD with GitHub Actions & Docker

on:
    push:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4
              with: 
                node-version: '20'

            - name: Install dependencies
              run: npm install

            # - name: Run ESLint
            #   run: npm run lint

            - name: Create .env file
              run: |
                touch .env
                echo DB_NAME=${{ secrets.DB_NAME }} >> .env
                echo DB_HOST=${{ secrets.DB_HOST }} >> .env
                echo DB_USER=${{ secrets.DB_USER }} >> .env
                echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
                echo DB_DIALECT=${{ secrets.DB_DIALECT }} >> .env
                echo JWT_ACCESS_KEY=${{ secrets.JWT_ACCESS_KEY }} >> .env
                echo JWT_REFRESH_KEY=${{ secrets.JWT_REFRESH_KEY }} >> .env
                echo PORT=3000 >> .env
                echo SMTP_SERVER=${{ secrets.SMTP_SERVER }} >> .env
                echo SMTP_PORT=${{ secrets.SMTP_PORT }} >> .env
                echo EMAIL_USER=${{ secrets.EMAIL_USER }} >> .env
                echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env

            - name: Build Docker Image
              run: docker build -t kticket-server-app .

            - name: Log in to Docker Hub
              env: 
                DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
                DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
              run: echo $DOCKER_HUB_ACCESS_TOKEN | docker login --username $DOCKER_HUB_USERNAME --password-stdin

            - name: Set up Tag
              run: docker tag kticket-server-app ${{ secrets.DOCKER_HUB_USERNAME }}/kticket-server-app

            - name: Push Docker image to Docker Hub
              run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kticket-server-app

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                ssh-private-key: ${{ secrets.EC2_KEY }}

            - name: Deploy to EC2
              run: |
                ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
                    echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | sudo docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
                    sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/kticket-server-app:latest
                    sudo docker stop kticket-server-app || true
                    sudo docker rm kticket-server-app || true
                    sudo docker run -d --name kticket-server-app -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/kticket-server-app:latest
                EOF
            